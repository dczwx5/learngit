//------------------------------------------------------------------------------// Copyright (C) 2016 Shenzhen Qifun Network Co. Ltd. All Rights Reserved.//------------------------------------------------------------------------------/** * Created by user on 2016/11/2. */package kof.ui {import QFLib.Foundation.CMap;import com.greensock.TweenLite;import flash.utils.Dictionary;import kof.framework.CViewHandler;import kof.ui.component.CQueueTips;import kof.ui.master.messageprompt.MPOperationTipsUI;import kof.util.TweenUtil;public class CMsgAlertHandler extends CViewHandler {    public static const NORMAL : int = 0;    public static const WARNING : int = 1;    public function CMsgAlertHandler() {        super( true ); // load view by default to call onInitializeView    }    override public function get viewClass() : Array {        return [ MPOperationTipsUI ];    }    override protected function onAssetsLoadCompleted() : void {        super.onAssetsLoadCompleted();        onInitializeView();            }    private static const _durationDic_key_sn : Dictionary = new Dictionary();    _durationDic_key_sn[ 0 ] = 3.25;    _durationDic_key_sn[ 1 ] = 3.00;    _durationDic_key_sn[ 2 ] = 2.75;    _durationDic_key_sn[ 3 ] = 2.50;    _durationDic_key_sn[ 4 ] = 2.25;    _durationDic_key_sn[ 5 ] = 2.00;    private var _reduceDuration : Number = .2;    private var _pendingInterval : int = 1000;    private var _pendingArr : Array = [];    private var _shownArr : Array = [];    private var _max : int = 6; // ([0~_max), 注意：_max是非闭区间)    private var _pool : Vector.<CQueueTips> = new Vector.<CQueueTips>();    private function fromPool( msg : String, type : int ) : CQueueTips {        var result : CQueueTips = _pool.length > 0 ? _pool.shift() : new CQueueTips();        result.type = type;        result.msg = msg;        return result;    }    private function toPool( tips : CQueueTips ) : void {        if ( !tips ) {            return;        }        tips.remove();        tips.reset();        if ( _pool.indexOf( tips ) == -1 ) {            _pool.push( tips );        }        var idx : int = _shownArr.indexOf( tips );        if ( idx != -1 ) {            _shownArr.splice( idx, 1 );        }    }    /** arr支持两个结构：     * </br>     * 1、arr:[{msg:msg, type:type}]     * </br>     * 2、arr:[string1, string2, ..., stringN]     * </br>     *  type 参数EnumCQueueTipsBgType，同时type也是可选参数     * */    public function showArr( arr : Array ) : void {        var canImmediatelyShowCount : int = _max - _shownArr.length;        var pushToPending : Array;        if ( canImmediatelyShowCount > 0 ) {            canImmediatelyShowCount = canImmediatelyShowCount > arr.length ? arr.length : canImmediatelyShowCount;            for ( var i : int = 0, len : int = canImmediatelyShowCount; i < len; ++i ) {                show( arr[ i ] );            }            if ( arr.length == canImmediatelyShowCount ) { // 全部显示完了                return;            }            else {                pushToPending = arr.slice( canImmediatelyShowCount, arr.length - 1 );            }        }        else {            pushToPending = arr;        }        if ( pushToPending && pushToPending.length > 0 ) {            _pendingArr.push.apply( null, pushToPending );        }    }    private static var _delayTween : TweenLite;    private static var _penddingTime : Boolean = false;    /** <p>目前支持${item:1010101}, ${face:001}两种处理功能：分别是：物品图标，与表情(001~035) <p>     * <p>eg. "获得物品：${item:1010101}x1"；"这是表情001：${face:001}"<p>     * @param type 参数EnumCQueueTipsBgType     * @see EnumCQueueTipsBgType     * */    public function show( msg : String, type : int = CMsgAlertHandler.WARNING, playSound : Boolean = true ) : void {        var tips : CQueueTips;        for each ( tips in _shownArr ){//如果跟正在显示的str一样的，就不显示            if( tips.msgStr == msg ){                return;            }        }        if ( !_penddingTime && _shownArr.length < _max ) {            // show            innerShow( msg, type, playSound );            _penddingTime = true;            _delayTween = TweenLite.delayedCall( .5, function () : void {                _penddingTime = false;                if ( !handleShift() ) {                    _delayTween.kill();                    _delayTween = null;                }            } );        }        else {            _pendingArr.push( {msg : msg, type : type} );        }    }    public function errorMsg( msg : String, playSound : Boolean = true ) : void {//        show(HtmlUtil.format(msg, 0xffffff, 14), EnumCQueueTipsBgType.TYPE_2, playSound);    }    private function handleShift() : Boolean {        if ( !_penddingTime && _shownArr.length < _max && _pendingArr.length > 0 ) {            var pendingData : Object = _pendingArr.shift();            if ( pendingData is String ) {                show( pendingData as String );            }            else {                show( pendingData.msg, pendingData.type );            }            return true;        }        return false;    }    private function innerShow( msg : String, type : int, playSound : Boolean ) : void {        var tips : CQueueTips = fromPool( msg, type );//        //根据type判断具体播放的系统音效//        if(playSound){//            var soundId:String = EnumSoundId.NONE;//            if(type == EnumCQueueTipsBgType.TYPE_1)//            {//                soundId = EnumSoundId.ID_COMMON_CQueueTips_GREEN;//            }//            if(type == EnumCQueueTipsBgType.TYPE_2)//            {//                soundId = EnumSoundId.ID_COMMON_CQueueTips_RED;//            }//            GameSoundManager.playSystemSoundById(soundId);//        }        tips.alpha = 1;        tips.x = (App.stage.stageWidth - tips.width) >> 1;        tips.y = (App.stage.stageHeight - tips.height) * .4;        var pUISystem : CUISystem = (uiCanvas as CUISystem);        if ( pUISystem ) {            pUISystem.msgLayer.addChild( tips );        } else {            App.stage.addChild( tips );        }        _shownArr.unshift( tips );        if ( tips.fadeInAlphaTween ) {            tips.fadeInAlphaTween.kill();            tips.fadeInAlphaTween = null;        }        tips.alpha = 0;        tips.fadeInAlphaTween = TweenUtil.tween( tips, .5, {alpha : 1} );        if ( tips.fadeOutAlphaTween ) {            tips.fadeOutAlphaTween.kill();            tips.fadeOutAlphaTween = null;        }        tips.fadeOutAlphaTween = TweenUtil.tween( tips, .5,                {                    delay : 2, alpha : 0,                    onComplete : function () : void {                        toPool( tips );                        handleShift();                        _onCompleteHandler(tips.msgStr);                    },                    onStart : function () : void {                        var idx : int = _shownArr.indexOf( tips );                        if ( idx != -1 ) {                            _shownArr.splice( idx, 1 );                        }                    }                } );        for ( var i : int = 0, len : int = _shownArr.length; i < len; ++i ) {            var t : CQueueTips = _shownArr[ i ];            if ( t.yTween ) {                t.yTween.kill();                t.yTween = null;            }            t.yTween = TweenUtil.tween( t, 1, {y : (App.stage.stageHeight - tips.height) * .4 - tips.height * i} );        }    }    private var m_pShowMap:CMap;    private var m_pAttrMap:CMap;    /**     * 显示属性增加值     * @param attrName     * @param value     * @param playSound     */    public function showProp(attrName : String, value:int, playSound : Boolean = true):void    {        if(m_pAttrMap == null)        {            m_pAttrMap = new CMap();        }        if(m_pShowMap == null)        {            m_pShowMap = new CMap();        }        if(m_pShowMap.find(attrName))        {            var totalValue:int = int(m_pAttrMap.find(attrName)) + value;            m_pAttrMap.add(attrName, totalValue, true);        }        else        {            var msgType:int = value >= 0 ? CMsgAlertHandler.NORMAL : CMsgAlertHandler.WARNING;            show(attrName + " + " + value, msgType, playSound);            m_pAttrMap.add(attrName,0,true);            m_pShowMap.add(attrName, true, true);        }    }    private function _onCompleteHandler(tips:String):void    {        if(m_pShowMap)        {            for(var key:String in m_pAttrMap)            {                if(m_pShowMap.find(key) && tips.indexOf(key) != -1)                {                    m_pShowMap.add(key, false, true);                    break;                }            }        }        if(m_pAttrMap)        {            for(key in m_pAttrMap)            {                var value:int = m_pAttrMap.find(key);                if(value && !m_pShowMap.find(key))                {                    var type:int = value >= 0 ? CMsgAlertHandler.NORMAL : CMsgAlertHandler.WARNING;                    show(key + " + " + value, type);                    m_pAttrMap.add(key,0,true);                    m_pShowMap.add(key, true, true);                    break;                }            }        }    }}}